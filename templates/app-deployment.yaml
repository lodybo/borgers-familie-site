apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace }}
  labels: {{ toYaml .Values.app.labels | nindent 4 }}
    environment: {{ .Values.environment }}

spec:
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels: {{ toYaml .Values.app.labels | nindent 8 }}
        environment: {{ .Values.environment }}
    spec:
      initContainers:
        - name: prisma-generate
          image: {{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}
          command: ["sh", "-c"]
          args:
            - |
              echo "Generating Prisma client..."
              npx prisma generate
              echo "Prisma client generated successfully."
              cp -r /borgers-site/node_modules/.prisma /shared/
              cp -r /borgers-site/node_modules/@prisma /shared/
          env:
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.app.name }}-postgres-secret
                    key: password
              - name: DATABASE_URL
                value: "postgres://{{ .Values.postgres.username }}:$(DATABASE_PASSWORD)@{{ .Values.app.name }}-postgresql-service:5432/{{ .Values.postgres.database }}"
          securityContext:
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
          volumeMounts:
            - name: prisma-generated
              mountPath: /shared
      nodeSelector:
        app-node: "true"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Values.app.name }}
          image: {{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}
          command: [ 'sh', '-c' ]
          args:
            - |
              # Copy prisma client back before starting
              cp -r /shared/.prisma /borgers-site/node_modules/
              cp -r /shared/@prisma /borgers-site/node_modules/
              echo "Starting Borgers Familie Site..."
              npm start
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.name }}-postgres-secret
                  key: password
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgres.username }}:$(DATABASE_PASSWORD)@{{ .Values.app.name }}-postgresql-service:5432/{{ .Values.postgres.database }}"
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.name }}-session-secret
                  key: password
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.name }}-sendgrid-secret
                  key: apiKey
            - name: CSRF_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.name }}-csrf-secret
                  key: csrfSecret
            - name: MOLLIE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.name }}-mollie-secret
                  key: apiKey
{{/*          resources:*/}}
{{/*            requests:*/}}
{{/*              memory: {{ .Values.resources.requests.memory | default "128Mi" }}*/}}
{{/*              cpu: {{ .Values.resources.requests.cpu | default "100m" }}*/}}
{{/*            limits:*/}}
{{/*              memory: {{ .Values.resources.limits.memory | default "512Mi" }}*/}}
{{/*              cpu: {{ .Values.resources.limits.cpu | default "500m" }}*/}}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
          volumeMounts:
            - name: prisma-generated
              mountPath: /shared
      volumes:
        - name: prisma-generated
          emptyDir: { }
